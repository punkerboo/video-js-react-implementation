{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _htmlTrackElement = require('../tracks/html-track-element');\n\nvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\nvar _htmlTrackElementList = require('../tracks/html-track-element-list');\n\nvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _textTrackList = require('../tracks/text-track-list');\n\nvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\nvar _videoTrackList = require('../tracks/video-track-list');\n\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\nvar _audioTrackList = require('../tracks/audio-track-list');\n\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _buffer = require('../utils/buffer.js');\n\nvar _mediaError = require('../media-error.js');\n\nvar _mediaError2 = _interopRequireDefault(_mediaError);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\n\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new _textTrack2['default'](options);\n  tracks.addTrack_(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = function (_Component) {\n  _inherits(Tech, _Component);\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n\n\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, Tech); // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    _this.textTracks_ = options.textTracks;\n    _this.videoTracks_ = options.videoTracks;\n    _this.audioTracks_ = options.audioTracks; // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false) {\n      _this.featuresNativeTextTracks = false;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\n    _this.initTextTrackListeners();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  };\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return (0, _timeRanges.createTimeRange)(0, 0);\n  };\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  };\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(['audio', 'video', 'text']); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this2 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this2[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this2.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack_(track);\n      }\n    });\n  };\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new _mediaError2['default'](err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  };\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return (0, _timeRanges.createTimeRange)(0, 0);\n    }\n\n    return (0, _timeRanges.createTimeRange)();\n  };\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  };\n  /**\n   * Turn on listeners for {@link TextTrackList} events. This adds\n   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n   * `removetrack`.\n   *\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n    var textTrackListChanges = Fn.bind(this, function () {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n       *\n       * @event Tech#texttrackchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('texttrackchange');\n    });\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    tracks.addEventListener('removetrack', textTrackListChanges);\n    tracks.addEventListener('addtrack', textTrackListChanges);\n    this.on('dispose', Fn.bind(this, function () {\n      tracks.removeEventListener('removetrack', textTrackListChanges);\n      tracks.removeEventListener('addtrack', textTrackListChanges);\n    }));\n  };\n  /**\n   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this3 = this;\n\n    var trackTypes = ['video', 'audio'];\n    trackTypes.forEach(function (type) {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n       *\n       * @event Tech#audiotrackchange\n       * @type {EventTarget~Event}\n       */\n\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n       *\n       * @event Tech#videotrackchange\n       * @type {EventTarget~Event}\n       */\n      var trackListChanges = function trackListChanges() {\n        _this3.trigger(type + 'trackchange');\n      };\n\n      var tracks = _this3[type + 'Tracks']();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this3.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this4 = this;\n\n    if (_window2['default'].WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (_document2['default'].body.contains(this.el())) {\n      var vtt = require('videojs-vtt.js'); // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n\n\n      if (!this.options_['vtt.js'] && (0, _obj.isPlain)(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = _document2['default'].createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      _window2['default'].WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n  /**\n   * Emulate texttracks\n   *\n   * @method emulateTextTracks\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this5 = this;\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack_(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack_(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this5.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n  /**\n   * Get the `Tech`s {@link VideoTrackList}.\n   *\n   * @return {VideoTrackList}\n   *          The video track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.videoTracks = function videoTracks() {\n    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n    return this.videoTracks_;\n  };\n  /**\n   * Get the `Tech`s {@link AudioTrackList}.\n   *\n   * @return {AudioTrackList}\n   *          The audio track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.audioTracks = function audioTracks() {\n    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n    return this.audioTracks_;\n  };\n  /**\n   * Get the `Tech`s {@link TextTrackList}.\n   *\n   * @return {TextTrackList}\n   *          The text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.textTracks = function textTracks() {\n    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n    return this.textTracks_;\n  };\n  /**\n   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n   * that were added to the DOM.\n   *\n   * @return {TextTrackList}\n   *          The remote text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n    return this.remoteTextTracks_;\n  };\n  /**\n   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n   * being used as TextTracks.\n   *\n   * @return {HTMLTrackElementList}\n   *          The current HTML track elements that exist for the tech.\n   */\n\n\n  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n    return this.remoteTextTrackEls_;\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = (0, _mergeOptions2['default'])(options, {\n      tech: this\n    });\n    return new _htmlTrackElement2['default'](track);\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack_(track);\n    this.autoRemoteTextTracks_.removeTrack_(track);\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    Tech.techs_[name] = tech;\n    return tech;\n  };\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        Name of the component to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  return Tech;\n}(_component2['default']);\n/**\n * List of associated text tracks.\n *\n * @type {TextTrackList}\n * @private\n */\n\n\nTech.prototype.textTracks_; // eslint-disable-line\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n */\n\nTech.prototype.audioTracks_; // eslint-disable-line\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n */\n\nTech.prototype.videoTracks_; // eslint-disable-line\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   *\n   * @return {Tech}\n   *         Returns itself; this method is chainable\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        _log2['default'].error('No source hander found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source; // Catch if someone replaced the src without calling setSource.\n      // If they do, set currentSource_ to null and dispose our source handler.\n\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n    return this;\n  };\n  /**\n   * Called once for the first loadstart of a video.\n   *\n   * @listens Tech#loadstart\n   */\n\n\n  _Tech.prototype.firstLoadStartListener_ = function () {\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  }; // On successive loadstarts when setSource has not been called again\n\n  /**\n   * Called after the first loadstart for a video occurs.\n   *\n   * @listens Tech#loadstart\n   */\n\n\n  _Tech.prototype.successiveLoadStartListener_ = function () {\n    this.disposeSourceHandler();\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n_component2['default'].registerComponent('Tech', Tech); // Old name for Tech\n// @deprecated\n\n\n_component2['default'].registerComponent('MediaTechController', Tech);\n\nTech.registerTech('Tech', Tech);\nexports['default'] = Tech;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/tech/tech.js"],"names":["exports","__esModule","_component","require","_component2","_interopRequireDefault","_htmlTrackElement","_htmlTrackElement2","_htmlTrackElementList","_htmlTrackElementList2","_mergeOptions","_mergeOptions2","_textTrack","_textTrack2","_textTrackList","_textTrackList2","_videoTrackList","_videoTrackList2","_audioTrackList","_audioTrackList2","_fn","Fn","_interopRequireWildcard","_log","_log2","_timeRanges","_buffer","_mediaError","_mediaError2","_window","_window2","_document","_document2","_obj","obj","newObj","key","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","createTrackHelper","kind","label","language","options","arguments","length","undefined","tracks","textTracks","tech","track","addTrack_","Tech","_Component","ready","reportTouchActivity","_this","hasStarted_","on","textTracks_","videoTracks_","videoTracks","audioTracks_","audioTracks","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","forEach","nativeCaptions","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTextTrackListeners","initTrackListeners","nativeControlsForTouch","emitTapEvents","name_","name","onDurationChange","manualProgress","one","trackProgress","manualProgressOff","stopTrackingProgress","off","event","progressInterval","setInterval","bind","numBufferedPercent","bufferedPercent","bufferedPercent_","trigger","duration_","duration","buffered","createTimeRange","clearInterval","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","type","target","manuallyTriggered","dispose","clearTracks","types","_this2","concat","list","i","removeRemoteTextTrack","removeTrack_","cleanupAutoTextTracks","reset","error","err","error_","played","setCurrentTime","textTrackListChanges","addEventListener","removeEventListener","_this3","trackTypes","trackListChanges","addWebVttScript_","_this4","WebVTT","body","contains","el","vtt","options_","isPlain","keys","script","createElement","src","onload","onerror","parentNode","appendChild","_this5","remoteTracks","remoteTextTracks","handleAddTrack","e","handleRemoveTrack","updateDisplay","textTracksChanges","mode","remoteTextTracks_","remoteTextTrackEls","remoteTextTrackEls_","addTextTrack","Error","createRemoteTextTrack","addRemoteTextTrack","manualCleanup","htmlTrackElement","warn","addTrackElement_","trackElement","getTrackElementByTrack_","removeTrackElement_","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","isTech","component","registerTech","techs_","getTech","videojs","featuresVolumeControl","featuresFullscreenResize","featuresPlaybackRate","withSourceHandlers","_Tech","registerSourceHandler","handler","index","handlers","sourceHandlers","splice","can","selectSourceHandler","source","canHandleSource","canPlaySource","srcObj","sh","deferrable","fnName","originalFn","sourceHandler_","apply","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","el_","firstLoadStartListener_","successiveLoadStartListener_","handleSource","registerComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _htmlTrackElement = require('../tracks/html-track-element');\n\nvar _htmlTrackElement2 = _interopRequireDefault(_htmlTrackElement);\n\nvar _htmlTrackElementList = require('../tracks/html-track-element-list');\n\nvar _htmlTrackElementList2 = _interopRequireDefault(_htmlTrackElementList);\n\nvar _mergeOptions = require('../utils/merge-options.js');\n\nvar _mergeOptions2 = _interopRequireDefault(_mergeOptions);\n\nvar _textTrack = require('../tracks/text-track');\n\nvar _textTrack2 = _interopRequireDefault(_textTrack);\n\nvar _textTrackList = require('../tracks/text-track-list');\n\nvar _textTrackList2 = _interopRequireDefault(_textTrackList);\n\nvar _videoTrackList = require('../tracks/video-track-list');\n\nvar _videoTrackList2 = _interopRequireDefault(_videoTrackList);\n\nvar _audioTrackList = require('../tracks/audio-track-list');\n\nvar _audioTrackList2 = _interopRequireDefault(_audioTrackList);\n\nvar _fn = require('../utils/fn.js');\n\nvar Fn = _interopRequireWildcard(_fn);\n\nvar _log = require('../utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _timeRanges = require('../utils/time-ranges.js');\n\nvar _buffer = require('../utils/buffer.js');\n\nvar _mediaError = require('../media-error.js');\n\nvar _mediaError2 = _interopRequireDefault(_mediaError);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _obj = require('../utils/obj');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file tech.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new _textTrack2['default'](options);\n\n  tracks.addTrack_(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  _inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n    _classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = _possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    _this.textTracks_ = options.textTracks;\n    _this.videoTracks_ = options.videoTracks;\n    _this.audioTracks_ = options.audioTracks;\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false) {\n      _this.featuresNativeTextTracks = false;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new _textTrackList2['default']();\n\n    _this.initTextTrackListeners();\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(Fn.bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return (0, _timeRanges.createTimeRange)(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent() {\n    return (0, _buffer.bufferedPercent)(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(['audio', 'video', 'text']);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this2 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this2[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this2.removeRemoteTextTrack(track);\n        }\n        list.removeTrack_(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new _mediaError2['default'](err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return (0, _timeRanges.createTimeRange)(0, 0);\n    }\n    return (0, _timeRanges.createTimeRange)();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link TextTrackList} events. This adds\n   * {@link EventTarget~EventListeners} for `texttrackchange`, `addtrack` and\n   * `removetrack`.\n   *\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTextTrackListeners = function initTextTrackListeners() {\n    var textTrackListChanges = Fn.bind(this, function () {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n       *\n       * @event Tech#texttrackchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('texttrackchange');\n    });\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    tracks.addEventListener('removetrack', textTrackListChanges);\n    tracks.addEventListener('addtrack', textTrackListChanges);\n\n    this.on('dispose', Fn.bind(this, function () {\n      tracks.removeEventListener('removetrack', textTrackListChanges);\n      tracks.removeEventListener('addtrack', textTrackListChanges);\n    }));\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList} and {@link {AudioTrackList} events.\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this3 = this;\n\n    var trackTypes = ['video', 'audio'];\n\n    trackTypes.forEach(function (type) {\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n       *\n       * @event Tech#audiotrackchange\n       * @type {EventTarget~Event}\n       */\n\n      /**\n       * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n       *\n       * @event Tech#videotrackchange\n       * @type {EventTarget~Event}\n       */\n      var trackListChanges = function trackListChanges() {\n        _this3.trigger(type + 'trackchange');\n      };\n\n      var tracks = _this3[type + 'Tracks']();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this3.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this4 = this;\n\n    if (_window2['default'].WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (_document2['default'].body.contains(this.el())) {\n      var vtt = require('videojs-vtt.js');\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && (0, _obj.isPlain)(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = _document2['default'].createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this4.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      _window2['default'].WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   * @method emulateTextTracks\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this5 = this;\n\n    var tracks = this.textTracks();\n\n    if (!tracks) {\n      return;\n    }\n\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack_(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack_(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this5.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Get the `Tech`s {@link VideoTrackList}.\n   *\n   * @return {VideoTrackList}\n   *          The video track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.videoTracks = function videoTracks() {\n    this.videoTracks_ = this.videoTracks_ || new _videoTrackList2['default']();\n    return this.videoTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link AudioTrackList}.\n   *\n   * @return {AudioTrackList}\n   *          The audio track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.audioTracks = function audioTracks() {\n    this.audioTracks_ = this.audioTracks_ || new _audioTrackList2['default']();\n    return this.audioTracks_;\n  };\n\n  /**\n   * Get the `Tech`s {@link TextTrackList}.\n   *\n   * @return {TextTrackList}\n   *          The text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.textTracks = function textTracks() {\n    this.textTracks_ = this.textTracks_ || new _textTrackList2['default']();\n    return this.textTracks_;\n  };\n\n  /**\n   * Get the `Tech`s remote {@link TextTrackList}, which is created from elements\n   * that were added to the DOM.\n   *\n   * @return {TextTrackList}\n   *          The remote text track list that the Tech is currently using.\n   */\n\n\n  Tech.prototype.remoteTextTracks = function remoteTextTracks() {\n    this.remoteTextTracks_ = this.remoteTextTracks_ || new _textTrackList2['default']();\n    return this.remoteTextTracks_;\n  };\n\n  /**\n   * Get The `Tech`s  {HTMLTrackElementList}, which are the elements in the DOM that are\n   * being used as TextTracks.\n   *\n   * @return {HTMLTrackElementList}\n   *          The current HTML track elements that exist for the tech.\n   */\n\n\n  Tech.prototype.remoteTextTrackEls = function remoteTextTrackEls() {\n    this.remoteTextTrackEls_ = this.remoteTextTrackEls_ || new _htmlTrackElementList2['default']();\n    return this.remoteTextTrackEls_;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = (0, _mergeOptions2['default'])(options, {\n      tech: this\n    });\n\n    return new _htmlTrackElement2['default'](track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      _log2['default'].warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack_(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.autoRemoteTextTracks_.addTrack_(htmlTrackElement.track);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack_(track);\n    this.autoRemoteTextTracks_.removeTrack_(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    Tech.techs_[name] = tech;\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        Name of the component to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (_window2['default'] && _window2['default'].videojs && _window2['default'].videojs[name]) {\n      _log2['default'].warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return _window2['default'].videojs[name];\n    }\n  };\n\n  return Tech;\n}(_component2['default']);\n\n/**\n * List of associated text tracks.\n *\n * @type {TextTrackList}\n * @private\n */\n\n\nTech.prototype.textTracks_; // eslint-disable-line\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n */\nTech.prototype.audioTracks_; // eslint-disable-line\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n */\nTech.prototype.videoTracks_; // eslint-disable-line\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating wether the `Tech` support fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   *\n   * @return {Tech}\n   *         Returns itself; this method is chainable\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        _log2['default'].error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n\n      // Catch if someone replaced the src without calling setSource.\n      // If they do, set currentSource_ to null and dispose our source handler.\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n      this.one(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n\n    return this;\n  };\n\n  /**\n   * Called once for the first loadstart of a video.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.firstLoadStartListener_ = function () {\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  // On successive loadstarts when setSource has not been called again\n  /**\n   * Called after the first loadstart for a video occurs.\n   *\n   * @listens Tech#loadstart\n   */\n  _Tech.prototype.successiveLoadStartListener_ = function () {\n    this.disposeSourceHandler();\n    this.one(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      this.off(this.el_, 'loadstart', _Tech.prototype.firstLoadStartListener_);\n      this.off(this.el_, 'loadstart', _Tech.prototype.successiveLoadStartListener_);\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n_component2['default'].registerComponent('Tech', Tech);\n// Old name for Tech\n// @deprecated\n_component2['default'].registerComponent('MediaTechController', Tech);\nTech.registerTech('Tech', Tech);\nexports['default'] = Tech;\n"]},"metadata":{},"sourceType":"script"}