{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('./clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\n\nvar Button = function (_ClickableComponent) {\n  _inherits(Button, _ClickableComponent);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=button]\n   *        Element's node type. e.g. 'button'\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Button.prototype.createEl = function createEl() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'button';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    props = (0, _obj.assign)({\n      className: this.buildCSSClass()\n    }, props);\n\n    if (tag !== 'button') {\n      _log2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.'); // Add properties for clickable element which is not a native HTML button\n\n\n      props = (0, _obj.assign)({\n        tabIndex: 0\n      }, props); // Add ARIA attributes for clickable element which is not a native HTML button\n\n      attributes = (0, _obj.assign)({\n        role: 'button'\n      }, attributes);\n    } // Add attributes for button element\n\n\n    attributes = (0, _obj.assign)({\n      // Necessary since the default button type is \"submit\"\n      'type': 'button',\n      // let the screen reader user know that the text of the button may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = this.constructor.name;\n\n    _log2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.'); // Avoid the error message generated by ClickableComponent's addChild method\n\n\n    return _component2['default'].prototype.addChild.call(this, child, options);\n  };\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  };\n  /**\n   * Enable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('Button', Button);\n\nexports['default'] = Button;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/button.js"],"names":["exports","__esModule","_clickableComponent","require","_clickableComponent2","_interopRequireDefault","_component","_component2","_log","_log2","_obj","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Button","_ClickableComponent","apply","arguments","createEl","tag","length","undefined","props","attributes","assign","className","buildCSSClass","warn","tabIndex","role","el","createControlTextEl","addChild","child","options","name","enable","el_","removeAttribute","disable","setAttribute","handleKeyPress","event","which","registerComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _clickableComponent = require('./clickable-component.js');\n\nvar _clickableComponent2 = _interopRequireDefault(_clickableComponent);\n\nvar _component = require('./component');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _log = require('./utils/log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _obj = require('./utils/obj');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nvar Button = function (_ClickableComponent) {\n  _inherits(Button, _ClickableComponent);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=button]\n   *        Element's node type. e.g. 'button'\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'button';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = (0, _obj.assign)({\n      className: this.buildCSSClass()\n    }, props);\n\n    if (tag !== 'button') {\n      _log2['default'].warn('Creating a Button with an HTML element of ' + tag + ' is deprecated; use ClickableComponent instead.');\n\n      // Add properties for clickable element which is not a native HTML button\n      props = (0, _obj.assign)({\n        tabIndex: 0\n      }, props);\n\n      // Add ARIA attributes for clickable element which is not a native HTML button\n      attributes = (0, _obj.assign)({\n        role: 'button'\n      }, attributes);\n    }\n\n    // Add attributes for button element\n    attributes = (0, _obj.assign)({\n\n      // Necessary since the default button type is \"submit\"\n      'type': 'button',\n\n      // let the screen reader user know that the text of the button may change\n      'aria-live': 'polite'\n    }, attributes);\n\n    var el = _component2['default'].prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    _log2['default'].warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return _component2['default'].prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Enable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(_clickableComponent2['default']);\n\n_component2['default'].registerComponent('Button', Button);\nexports['default'] = Button;\n"]},"metadata":{},"sourceType":"script"}