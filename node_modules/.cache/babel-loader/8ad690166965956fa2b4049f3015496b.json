{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.hasLoaded = exports.autoSetupTimeout = exports.autoSetup = undefined;\n\nvar _dom = require('./utils/dom');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments.\n  if (!Dom.isReal()) {\n    return;\n  } // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n\n\n  var vids = _document2['default'].getElementsByTagName('video');\n\n  var audios = _document2['default'].getElementsByTagName('audio');\n\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  } // Check if any media elements exist\n\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var _i2 = 0, _e2 = mediaEls.length; _i2 < _e2; _i2++) {\n      var mediaEl = mediaEls[_i2]; // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  _window2['default'].setTimeout(autoSetup, wait);\n}\n\nif (Dom.isReal() && _document2['default'].readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  Events.one(_window2['default'], 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * check if the document has been loaded\n */\n\n\nvar hasLoaded = function hasLoaded() {\n  return _windowLoaded;\n};\n\nexports.autoSetup = autoSetup;\nexports.autoSetupTimeout = autoSetupTimeout;\nexports.hasLoaded = hasLoaded;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/setup.js"],"names":["exports","__esModule","hasLoaded","autoSetupTimeout","autoSetup","undefined","_dom","require","Dom","_interopRequireWildcard","_events","Events","_document","_document2","_interopRequireDefault","_window","_window2","obj","newObj","key","Object","prototype","hasOwnProperty","call","_windowLoaded","videojs","isReal","vids","getElementsByTagName","audios","mediaEls","length","i","e","push","_i","_e","_i2","_e2","mediaEl","getAttribute","player","options","wait","vjs","setTimeout","readyState","one"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.hasLoaded = exports.autoSetupTimeout = exports.autoSetup = undefined;\n\nvar _dom = require('./utils/dom');\n\nvar Dom = _interopRequireWildcard(_dom);\n\nvar _events = require('./utils/events.js');\n\nvar Events = _interopRequireWildcard(_events);\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments.\n  if (!Dom.isReal()) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = _document2['default'].getElementsByTagName('video');\n  var audios = _document2['default'].getElementsByTagName('audio');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i2 = 0, _e2 = mediaEls.length; _i2 < _e2; _i2++) {\n      var mediaEl = mediaEls[_i2];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  _window2['default'].setTimeout(autoSetup, wait);\n}\n\nif (Dom.isReal() && _document2['default'].readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  Events.one(_window2['default'], 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * check if the document has been loaded\n */\nvar hasLoaded = function hasLoaded() {\n  return _windowLoaded;\n};\n\nexports.autoSetup = autoSetup;\nexports.autoSetupTimeout = autoSetupTimeout;\nexports.hasLoaded = hasLoaded;\n"]},"metadata":{},"sourceType":"script"}