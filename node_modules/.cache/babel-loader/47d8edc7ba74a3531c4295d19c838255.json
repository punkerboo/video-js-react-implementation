{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.bufferedPercent = bufferedPercent;\n\nvar _timeRanges = require('./time-ranges.js');\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = (0, _timeRanges.createTimeRange)(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file buffer.js\n * @module buffer\n */","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/utils/buffer.js"],"names":["exports","__esModule","bufferedPercent","_timeRanges","require","buffered","duration","bufferedDuration","start","end","length","createTimeRange","i"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,eAAT,CAAyBG,QAAzB,EAAmCC,QAAnC,EAA6C;AAC3C,MAAIC,gBAAgB,GAAG,CAAvB;AACA,MAAIC,KAAK,GAAG,KAAK,CAAjB;AACA,MAAIC,GAAG,GAAG,KAAK,CAAf;;AAEA,MAAI,CAACH,QAAL,EAAe;AACb,WAAO,CAAP;AACD;;AAED,MAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACK,MAA3B,EAAmC;AACjCL,IAAAA,QAAQ,GAAG,CAAC,GAAGF,WAAW,CAACQ,eAAhB,EAAiC,CAAjC,EAAoC,CAApC,CAAX;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACK,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACxCJ,IAAAA,KAAK,GAAGH,QAAQ,CAACG,KAAT,CAAeI,CAAf,CAAR;AACAH,IAAAA,GAAG,GAAGJ,QAAQ,CAACI,GAAT,CAAaG,CAAb,CAAN,CAFwC,CAIxC;;AACA,QAAIH,GAAG,GAAGH,QAAV,EAAoB;AAClBG,MAAAA,GAAG,GAAGH,QAAN;AACD;;AAEDC,IAAAA,gBAAgB,IAAIE,GAAG,GAAGD,KAA1B;AACD;;AAED,SAAOD,gBAAgB,GAAGD,QAA1B;AACD;AAAC;AACF;AACA;AACA","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.bufferedPercent = bufferedPercent;\n\nvar _timeRanges = require('./time-ranges.js');\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = (0, _timeRanges.createTimeRange)(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n} /**\n   * @file buffer.js\n   * @module buffer\n   */\n"]},"metadata":{},"sourceType":"script"}