{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeOptions;\n\nvar _obj = require('./obj');\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    (0, _obj.each)(source, function (value, key) {\n      if (!(0, _obj.isPlain)(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!(0, _obj.isPlain)(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/utils/merge-options.js"],"names":["exports","__esModule","mergeOptions","_obj","require","result","_len","arguments","length","sources","Array","_key","forEach","source","each","value","key","isPlain"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,YAArB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,OAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,YAAT,GAAwB;AACtB,MAAIG,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,OAAO,GAAGC,KAAK,CAACJ,IAAD,CAA5C,EAAoDK,IAAI,GAAG,CAAhE,EAAmEA,IAAI,GAAGL,IAA1E,EAAgFK,IAAI,EAApF,EAAwF;AACtFF,IAAAA,OAAO,CAACE,IAAD,CAAP,GAAgBJ,SAAS,CAACI,IAAD,CAAzB;AACD;;AAEDF,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChC,QAAI,CAACA,MAAL,EAAa;AACX;AACD;;AAED,KAAC,GAAGV,IAAI,CAACW,IAAT,EAAeD,MAAf,EAAuB,UAAUE,KAAV,EAAiBC,GAAjB,EAAsB;AAC3C,UAAI,CAAC,CAAC,GAAGb,IAAI,CAACc,OAAT,EAAkBF,KAAlB,CAAL,EAA+B;AAC7BV,QAAAA,MAAM,CAACW,GAAD,CAAN,GAAcD,KAAd;AACA;AACD;;AAED,UAAI,CAAC,CAAC,GAAGZ,IAAI,CAACc,OAAT,EAAkBZ,MAAM,CAACW,GAAD,CAAxB,CAAL,EAAqC;AACnCX,QAAAA,MAAM,CAACW,GAAD,CAAN,GAAc,EAAd;AACD;;AAEDX,MAAAA,MAAM,CAACW,GAAD,CAAN,GAAcd,YAAY,CAACG,MAAM,CAACW,GAAD,CAAP,EAAcD,KAAd,CAA1B;AACD,KAXD;AAYD,GAjBD;AAmBA,SAAOV,MAAP;AACD;AAAC;AACF;AACA;AACA","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeOptions;\n\nvar _obj = require('./obj');\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    (0, _obj.each)(source, function (value, key) {\n      if (!(0, _obj.isPlain)(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!(0, _obj.isPlain)(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n} /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n"]},"metadata":{},"sourceType":"script"}