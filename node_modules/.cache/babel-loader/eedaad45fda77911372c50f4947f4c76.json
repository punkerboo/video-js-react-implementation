{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\n\nvar PlayToggle = function (_Button) {\n  _inherits(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    _classCallCheck(this, PlayToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  };\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  };\n\n  return PlayToggle;\n}(_button2['default']);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\n_component2['default'].registerComponent('PlayToggle', PlayToggle);\n\nexports['default'] = PlayToggle;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/control-bar/play-toggle.js"],"names":["exports","__esModule","_button","require","_button2","_interopRequireDefault","_component","_component2","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","PlayToggle","_Button","player","options","_this","on","handlePlay","handlePause","buildCSSClass","handleClick","event","player_","paused","play","pause","removeClass","addClass","controlText","controlText_","registerComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _button = require('../button.js');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _component = require('../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file play-toggle.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nvar PlayToggle = function (_Button) {\n  _inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    _classCallCheck(this, PlayToggle);\n\n    var _this = _possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  return PlayToggle;\n}(_button2['default']);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\n_component2['default'].registerComponent('PlayToggle', PlayToggle);\nexports['default'] = PlayToggle;\n"]},"metadata":{},"sourceType":"script"}