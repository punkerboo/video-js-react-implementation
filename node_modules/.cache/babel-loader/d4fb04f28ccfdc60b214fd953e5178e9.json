{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _chaptersTrackMenuItem = require('./chapters-track-menu-item.js');\n\nvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\nvar _toTitleCase = require('../../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\n\nvar ChaptersButton = function (_TextTrackButton) {\n  _inherits(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    _classCallCheck(this, ChaptersButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  };\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n  };\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new _chaptersTrackMenuItem2['default'](this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(_textTrackButton2['default']);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\n\n_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\n\nexports['default'] = ChaptersButton;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/control-bar/text-track-controls/chapters-button.js"],"names":["exports","__esModule","_textTrackButton","require","_textTrackButton2","_interopRequireDefault","_component","_component2","_chaptersTrackMenuItem","_chaptersTrackMenuItem2","_toTitleCase","_toTitleCase2","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ChaptersButton","_TextTrackButton","player","options","ready","_this","el_","setAttribute","buildCSSClass","update","event","track_","type","setTrack","findChaptersTrack","track","updateHandler_","bind","remoteTextTrackEl","player_","remoteTextTrackEls","getTrackElementByTrack_","removeEventListener","mode","_remoteTextTrackEl","addEventListener","tracks","textTracks","i","length","kind","kind_","getMenuCaption","label","localize","createMenu","options_","title","createItems","items","cues","l","cue","mi","push","controlText_","registerComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _textTrackButton = require('./text-track-button.js');\n\nvar _textTrackButton2 = _interopRequireDefault(_textTrackButton);\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nvar _chaptersTrackMenuItem = require('./chapters-track-menu-item.js');\n\nvar _chaptersTrackMenuItem2 = _interopRequireDefault(_chaptersTrackMenuItem);\n\nvar _toTitleCase = require('../../utils/to-title-case.js');\n\nvar _toTitleCase2 = _interopRequireDefault(_toTitleCase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file chapters-button.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nvar ChaptersButton = function (_TextTrackButton) {\n  _inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    _classCallCheck(this, ChaptersButton);\n\n    var _this = _possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    _this.el_.setAttribute('aria-label', 'Chapters Menu');\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize((0, _toTitleCase2['default'])(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new _chaptersTrackMenuItem2['default'](this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(_textTrackButton2['default']);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\n_component2['default'].registerComponent('ChaptersButton', ChaptersButton);\nexports['default'] = ChaptersButton;\n"]},"metadata":{},"sourceType":"script"}