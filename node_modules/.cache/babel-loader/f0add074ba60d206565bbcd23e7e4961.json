{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./volume-bar.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * @file volume-control.js\n */\n// Required children\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\n\nvar VolumeControl = function (_Component) {\n  _inherits(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    _classCallCheck(this, VolumeControl); // hide volume controls when they're not supported by the current tech\n\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n\n    _this.on(player, 'loadstart', function () {\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control'\n    });\n  };\n\n  return VolumeControl;\n}(_component2['default']);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\n_component2['default'].registerComponent('VolumeControl', VolumeControl);\n\nexports['default'] = VolumeControl;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/control-bar/volume-control/volume-control.js"],"names":["exports","__esModule","_component","require","_component2","_interopRequireDefault","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","VolumeControl","_Component","player","options","_this","tech_","featuresVolumeControl","addClass","on","removeClass","createEl","className","options_","children","registerComponent"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _component = require('../../component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nrequire('./volume-bar.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file volume-control.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n// Required children\n\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nvar VolumeControl = function (_Component) {\n  _inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    _classCallCheck(this, VolumeControl);\n\n    // hide volume controls when they're not supported by the current tech\n    var _this = _possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (player.tech_ && player.tech_.featuresVolumeControl === false) {\n      _this.addClass('vjs-hidden');\n    }\n    _this.on(player, 'loadstart', function () {\n      if (player.tech_.featuresVolumeControl === false) {\n        this.addClass('vjs-hidden');\n      } else {\n        this.removeClass('vjs-hidden');\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control'\n    });\n  };\n\n  return VolumeControl;\n}(_component2['default']);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\n_component2['default'].registerComponent('VolumeControl', VolumeControl);\nexports['default'] = VolumeControl;\n"]},"metadata":{},"sourceType":"script"}