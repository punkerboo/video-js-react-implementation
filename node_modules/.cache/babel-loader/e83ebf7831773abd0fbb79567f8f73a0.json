{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.createTimeRange = undefined;\nexports.createTimeRanges = createTimeRanges;\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range begins.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\n\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');\n  }\n}\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  if (rangeIndex === undefined) {\n    _log2['default'].warn('DEPRECATED: Function \\'' + fnName + '\\' on \\'TimeRanges\\' called without an index argument.');\n\n    rangeIndex = 0;\n  }\n\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object givent ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\nexports.createTimeRange = createTimeRanges;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/utils/time-ranges.js"],"names":["exports","__esModule","createTimeRange","undefined","createTimeRanges","_log","require","_log2","_interopRequireDefault","obj","rangeCheck","fnName","index","maxIndex","Error","getRange","valueIndex","ranges","rangeIndex","warn","length","createTimeRangesObj","start","end","bind","Array","isArray"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,eAAR,GAA0BC,SAA1B;AACAH,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACH,IAAD,CAAlC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACR,UAAX,GAAwBQ,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6C;AAC3C,MAAID,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGC,QAAzB,EAAmC;AACjC,UAAM,IAAIC,KAAJ,CAAU,yBAAyBH,MAAzB,GAAkC,4CAAlC,GAAiFC,KAAjF,GAAyF,mDAAzF,GAA+IC,QAA/I,GAA0J,IAApK,CAAN;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAASE,QAAT,CAAkBJ,MAAlB,EAA0BK,UAA1B,EAAsCC,MAAtC,EAA8CC,UAA9C,EAA0D;AACxD,MAAIA,UAAU,KAAKf,SAAnB,EAA8B;AAC5BI,IAAAA,KAAK,CAAC,SAAD,CAAL,CAAiBY,IAAjB,CAAsB,4BAA4BR,MAA5B,GAAqC,wDAA3D;;AACAO,IAAAA,UAAU,GAAG,CAAb;AACD;;AACDR,EAAAA,UAAU,CAACC,MAAD,EAASO,UAAT,EAAqBD,MAAM,CAACG,MAAP,GAAgB,CAArC,CAAV;AACA,SAAOH,MAAM,CAACC,UAAD,CAAN,CAAmBF,UAAnB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,mBAAT,CAA6BJ,MAA7B,EAAqC;AACnC,MAAIA,MAAM,KAAKd,SAAX,IAAwBc,MAAM,CAACG,MAAP,KAAkB,CAA9C,EAAiD;AAC/C,WAAO;AACLA,MAAAA,MAAM,EAAE,CADH;AAELE,MAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,cAAM,IAAIR,KAAJ,CAAU,iCAAV,CAAN;AACD,OAJI;AAKLS,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,cAAM,IAAIT,KAAJ,CAAU,iCAAV,CAAN;AACD;AAPI,KAAP;AASD;;AACD,SAAO;AACLM,IAAAA,MAAM,EAAEH,MAAM,CAACG,MADV;AAELE,IAAAA,KAAK,EAAEP,QAAQ,CAACS,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6B,CAA7B,EAAgCP,MAAhC,CAFF;AAGLM,IAAAA,GAAG,EAAER,QAAQ,CAACS,IAAT,CAAc,IAAd,EAAoB,KAApB,EAA2B,CAA3B,EAA8BP,MAA9B;AAHA,GAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASb,gBAAT,CAA0BkB,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,MAAIE,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;AACxB,WAAOD,mBAAmB,CAACC,KAAD,CAA1B;AACD,GAFD,MAEO,IAAIA,KAAK,KAAKnB,SAAV,IAAuBoB,GAAG,KAAKpB,SAAnC,EAA8C;AACnD,WAAOkB,mBAAmB,EAA1B;AACD;;AACD,SAAOA,mBAAmB,CAAC,CAAC,CAACC,KAAD,EAAQC,GAAR,CAAD,CAAD,CAA1B;AACD;;AAEDvB,OAAO,CAACE,eAAR,GAA0BE,gBAA1B","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.createTimeRange = undefined;\nexports.createTimeRanges = createTimeRanges;\n\nvar _log = require('./log.js');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range begins.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is greater than or equal to the maximum bound (' + maxIndex + ').');\n  }\n}\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  if (rangeIndex === undefined) {\n    _log2['default'].warn('DEPRECATED: Function \\'' + fnName + '\\' on \\'TimeRanges\\' called without an index argument.');\n    rangeIndex = 0;\n  }\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object givent ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\nexports.createTimeRange = createTimeRanges;\n"]},"metadata":{},"sourceType":"script"}