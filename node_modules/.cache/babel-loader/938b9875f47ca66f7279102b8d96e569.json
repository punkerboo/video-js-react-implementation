{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.isCrossOrigin = exports.getFileExtension = exports.getAbsoluteURL = exports.parseUrl = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\n\n/**\n * @file url.js\n * @module url\n */\n\n\nvar parseUrl = exports.parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = _document2['default'].createElement('a');\n\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = _document2['default'].createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n\n    _document2['default'].body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (addToBody) {\n    _document2['default'].body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = exports.getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = _document2['default'].createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\n\n\nvar getFileExtension = exports.getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = exports.isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = _window2['default'].location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/utils/url.js"],"names":["exports","__esModule","isCrossOrigin","getFileExtension","getAbsoluteURL","parseUrl","undefined","_document","require","_document2","_interopRequireDefault","_window","_window2","obj","url","props","a","createElement","href","addToBody","host","protocol","div","innerHTML","firstChild","setAttribute","body","appendChild","details","i","length","replace","removeChild","match","path","splitPathRe","pathParts","exec","pop","toLowerCase","winLoc","location","urlInfo","srcProtocol","crossOrigin"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.isCrossOrigin = exports.getFileExtension = exports.getAbsoluteURL = exports.parseUrl = undefined;\n\nvar _document = require('global/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _window = require('global/window');\n\nvar _window2 = _interopRequireDefault(_window);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\n/**\n * @file url.js\n * @module url\n */\nvar parseUrl = exports.parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = _document2['default'].createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = _document2['default'].createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    _document2['default'].body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (addToBody) {\n    _document2['default'].body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = exports.getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = _document2['default'].createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = exports.getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = exports.isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = _window2['default'].location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n"]},"metadata":{},"sourceType":"script"}