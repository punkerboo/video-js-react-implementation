{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n/**\n * @file format-time.js\n * @module Format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n * will force a number of leading zeros to cover the length of the guide.\n *\n * @param {number} seconds\n *        Number of seconds to be turned into a string\n *\n * @param {number} guide\n *        Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}\n\nexports['default'] = formatTime;","map":{"version":3,"sources":["C:/test_website/ninjasatnoon/node_modules/video.js/es5/utils/format-time.js"],"names":["exports","__esModule","formatTime","seconds","guide","arguments","length","undefined","s","Math","floor","m","h","gm","gh","isNaN","Infinity"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEF,OAAhF;AAEAA,EAAAA,OAAO,GAAGA,OAAO,GAAG,CAAV,GAAc,CAAd,GAAkBA,OAA5B;AACA,MAAIK,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,GAAG,EAArB,CAAR;AACA,MAAIQ,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAWP,OAAO,GAAG,EAAV,GAAe,EAA1B,CAAR;AACA,MAAIS,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWP,OAAO,GAAG,IAArB,CAAR;AACA,MAAIU,EAAE,GAAGJ,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,EAAR,GAAa,EAAxB,CAAT;AACA,MAAIU,EAAE,GAAGL,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,IAAnB,CAAT,CAR2B,CAU3B;;AACA,MAAIW,KAAK,CAACZ,OAAD,CAAL,IAAkBA,OAAO,KAAKa,QAAlC,EAA4C;AAC1C;AACA;AACAJ,IAAAA,CAAC,GAAGD,CAAC,GAAGH,CAAC,GAAG,GAAZ;AACD,GAf0B,CAiB3B;;;AACAI,EAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,IAASE,EAAE,GAAG,CAAd,GAAkBF,CAAC,GAAG,GAAtB,GAA4B,EAAhC,CAlB2B,CAoB3B;AACA;;AACAD,EAAAA,CAAC,GAAG,CAAC,CAACC,CAAC,IAAIC,EAAE,IAAI,EAAZ,KAAmBF,CAAC,GAAG,EAAvB,GAA4B,MAAMA,CAAlC,GAAsCA,CAAvC,IAA4C,GAAhD,CAtB2B,CAwB3B;;AACAH,EAAAA,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAAvB;AAEA,SAAOI,CAAC,GAAGD,CAAJ,GAAQH,CAAf;AACD;;AAEDR,OAAO,CAAC,SAAD,CAAP,GAAqBE,UAArB","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n/**\n * @file format-time.js\n * @module Format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n * will force a number of leading zeros to cover the length of the guide.\n *\n * @param {number} seconds\n *        Number of seconds to be turned into a string\n *\n * @param {number} guide\n *        Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n}\n\nexports['default'] = formatTime;\n"]},"metadata":{},"sourceType":"script"}